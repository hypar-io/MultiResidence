// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using System.Collections.Generic;

namespace MultiResidence
{
	public class MultiResidenceInputs: S3Args
	{
		/// <summary>
		/// A CSV list of coordinates defining a site boundary.
		/// The system will set this property to the data's path on disk.
		/// </summary>
		[JsonProperty("Site")]
		[JsonConverter(typeof(StringToInputDataConverter))]
		public InputData Site {get; internal set;}

		/// <summary>
		/// Quantity of family residences.
		/// </summary>
		[JsonProperty("Units")]
		public double Units {get;}


		
		/// <summary>
		/// Construct a MultiResidenceInputs with default inputs.
		/// This should be used only for testing.
		/// </summary>
		public MultiResidenceInputs() : base()
		{
			this.Site = new InputData("default_csv_input.csv");
			this.Units = 200;

		}
		
		/// <summary>
		/// Construct a MultiResidenceInputs specifying all inputs.
		/// </summary>
		/// <returns></returns>
		[JsonConstructor]
		public MultiResidenceInputs(InputData site, double units, string bucketName, string uploadsBucket, string gltfKey, string elementsKey, string ifcKey): base(bucketName, uploadsBucket, gltfKey, elementsKey, ifcKey)
		{
			this.Site = site;
			this.Units = units;

		}
	}
}